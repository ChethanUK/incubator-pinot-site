/*! For license information please see 0b8045ed.728269be.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{139:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return m}));var r=n(2),a=n(9),o=n(0),c=n.n(o),l=n(190),i=(n(211),n(216)),s=n(215),u={title:"Cluster",sidebar_label:"cluster",description:"Cluster"},b={id:"components/cluster",title:"Cluster",description:"Cluster",source:"@site/docs/components/cluster.md",permalink:"/docs/components/cluster",editUrl:"https://github.com/apache/incubator-pinot/edit/master/website/docs/components/cluster.md",sidebar_label:"cluster",sidebar:"docs",previous:{title:"Broker",permalink:"/docs/components/broker"},next:{title:"Pinot Query Language (PQL)",permalink:"/docs/components/controller"}},p=[{value:"Cluster components",id:"cluster-components",children:[{value:"Participant",id:"participant",children:[]},{value:"Spectator",id:"spectator",children:[]},{value:"Controller",id:"controller",children:[]}]},{value:"Logical view",id:"logical-view",children:[]},{value:"Setup a Pinot Cluster",id:"setup-a-pinot-cluster",children:[{value:"Using docker images",id:"using-docker-images",children:[]}]}],d={rightToc:p};function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Cluster is a set a nodes comprising of servers, brokers, controllers and minions."),Object(l.b)("p",null,"Pinot leverages ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"http://helix.apache.org"}),"Apache Helix")," for cluster management. Helix is a cluster management framework to manage replicated, partitioned resources in a distributed system. Helix uses Zookeeper to store cluster state and metadata."),Object(l.b)("p",null,Object(l.b)("img",Object(r.a)({parentName:"p"},{src:"../../static/img/components/components.png",alt:"Cluster Components"}))),Object(l.b)("h2",{id:"cluster-components"},"Cluster components"),Object(l.b)("p",null,"Briefly, Helix divides nodes into three logical components based on their responsibilities"),Object(l.b)("h3",{id:"participant"},"Participant"),Object(l.b)("p",null,"The nodes that host distributed, partitioned resources"),Object(l.b)("h3",{id:"spectator"},"Spectator"),Object(l.b)("p",null,"The nodes that observe the current state of each Participant and use that information to access the resources. Spectators are notified of state changes in the cluster (state of a participant, or that of a partition in a participant)."),Object(l.b)("h3",{id:"controller"},"Controller"),Object(l.b)("p",null,"The node that observes and controls the Participant nodes. It is responsible for coordinating all transitions in the cluster and ensuring that state constraints are satisfied while maintaining cluster stability."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Pinot Servers are modeled as Participants, more details about server nodes can be found in ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"../../docs/components/server"}),"Server")),Object(l.b)("li",{parentName:"ul"},"Pinot Brokers are modeled as Spectators, more details about broker nodes can be found in ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"../../docs/components/broker"}),"Broker")),Object(l.b)("li",{parentName:"ul"},"Pinot Controllers are modeled as Controllers, more details about controller nodes can be found in ",Object(l.b)("a",Object(r.a)({parentName:"li"},{href:"../../docs/components/controller"}),"Controller"))),Object(l.b)("h2",{id:"logical-view"},"Logical view"),Object(l.b)("p",null,"Another way to visualize the cluster is a logical view, wherein a cluster contains ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/components/segments"}),"tenants"),", tenants contain ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/components/tables"}),"tables"),", and tables contain ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/components/segments"}),"segments"),"."),Object(l.b)("p",null,Object(l.b)("img",Object(r.a)({parentName:"p"},{src:"../../static/img/components/ClusterLogical.png",alt:"Logical View"}))),Object(l.b)("h2",{id:"setup-a-pinot-cluster"},"Setup a Pinot Cluster"),Object(l.b)("p",null,"Typically, there is only cluster per environment/data center. There is no needed to create multiple Pinot clusters since Pinot supports the concept of ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"../../docs/components/tenants"}),"tenants"),"."),Object(l.b)("p",null,"At LinkedIn, the largest Pinot cluster consists of 1000+ nodes."),Object(l.b)("p",null,"To setup a Pinot cluster, we need to first start Zookeeper:"),Object(l.b)(i.a,{className:"Install",defaultValue:"Using launcher scripts",values:[{label:Object(l.b)(c.a.Fragment,null,Object(l.b)("i",{className:"Using docker images"})," Using docker images"),value:"docker"},{label:Object(l.b)(c.a.Fragment,null,Object(l.b)("i",{className:"Using launcher scripts"})," Using launcher scripts"),value:"launcer"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"docker",mdxType:"TabItem"},Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Create a Network\nCreate an isolated bridge network in docker")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"docker network create -d bridge pinot-demo\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Start Zookeeper")),Object(l.b)("p",null,"Start Zookeeper in daemon."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n    --network=pinot-demo \\\n    --name pinot-zookeeper \\\n    --restart always \\\n    -p 2181:2181 \\\n    -d zookeeper:3.5.6\n")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Start Zookeeper UI\nStart  ZKUI to browse Zookeeper data at http://localhost:9090.")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n    --network pinot-demo --name=zkui \\\n    -p 9090:9090 \\\n    -e ZK_SERVER=pinot-zookeeper:2181 \\\n    -d qnib/plain-zkui:latest\n")),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"}))),Object(l.b)(s.a,{value:"launcer",mdxType:"TabItem"},Object(l.b)("p",null,"Download Pinot Distribution using instructions in ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:""}),"Download")),Object(l.b)("p",null,"Start Zookeeper"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"bin/pinot-admin.sh StartZookeeper\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Start Zooinspector")),Object(l.b)("p",null,"Install ",Object(l.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/jfim/zooinspector"}),"zooinspector")," to view the data in Zookeeper, and connect to localhost:2181"))),Object(l.b)("p",null,"Once we've started Zookeeper, we can start other components to join this cluster. If you're using docker, pull the latest ",Object(l.b)("inlineCode",{parentName:"p"},"apachepinot/pinot")," image. "),Object(l.b)("h3",{id:"using-docker-images"},"Using docker images"),Object(l.b)("h4",{id:"pull-pinot-docker-image"},"Pull pinot docker image"),Object(l.b)("p",null,"(Optional) You can also follow the instructions here to build your own images.",Object(l.b)("br",null)),Object(l.b)("p",null,"You can try out pre-built Pinot all-in-one docker image."),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sql"}),"export PINOT_VERSION=0.3.0-SNAPSHOT\nexport PINOT_IMAGE=apachepinot/pinot:${PINOT_VERSION}\ndocker pull ${PINOT_IMAGE}\n")),Object(l.b)("p",null,"To start other components to join the cluster"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:""}),"Start Controller")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:""}),"Start Broker")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(r.a)({parentName:"li"},{href:""}),"Start Server"))),Object(l.b)("p",null,"Explore your cluster via Pinot Data Explorer"))}m.isMDXComponent=!0},190:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,m=b["".concat(c,".").concat(d)]||b[d]||p[d]||o;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},191:function(e,t,n){var r;!function(){"use strict";var n={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var r=arguments[t];if(r){var o=typeof r;if("string"===o||"number"===o)e.push(r);else if(Array.isArray(r)&&r.length){var c=a.apply(null,r);c&&e.push(c)}else if("object"===o)for(var l in r)n.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(t,[]))||(e.exports=r)}()},211:function(e,t,n){"use strict";n(212);var r=n(0),a=n.n(r),o=n(191),c=n.n(o);n(128);t.a=function(e){var t=e.children,n=e.classNames,r=e.fill,o=e.icon,l=e.type,i=null;switch(l){case"danger":i="alert-triangle";break;case"success":i="check-circle";break;case"warning":i="alert-triangle";break;default:i="info"}return a.a.createElement("div",{className:c()(n,"alert","alert--"+l,{"alert--fill":r,"alert--icon":!1!==o}),role:"alert"},!1!==o&&a.a.createElement("i",{className:c()("feather","icon-"+(o||i))}),t)}},212:function(e,t,n){var r=n(17);r(r.P,"Array",{fill:n(213)}),n(77)("fill")},213:function(e,t,n){"use strict";var r=n(51),a=n(78),o=n(38);e.exports=function(e){for(var t=r(this),n=o(t.length),c=arguments.length,l=a(c>1?arguments[1]:void 0,n),i=c>2?arguments[2]:void 0,s=void 0===i?n:a(i,n);s>l;)t[l++]=e;return t}},214:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)({tabGroupChoices:{},setTabGroupChoices:function(){}});t.a=a},215:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){return a.a.createElement("div",null,e.children)}},216:function(e,t,n){"use strict";n(29),n(21),n(20);var r=n(0),a=n.n(r),o=n(214);var c=function(){return Object(r.useContext)(o.a)},l=n(191),i=n.n(l),s=n(129),u=n.n(s),b=37,p=39;t.a=function(e){var t=e.block,n=e.children,o=e.defaultValue,l=e.values,s=e.groupId,d=c(),m=d.tabGroupChoices,O=d.setTabGroupChoices,f=Object(r.useState)(o),j=f[0],h=f[1];if(null!=s){var g=m[s];null!=g&&g!==j&&h(g)}var v=function(e){h(e),null!=s&&O(s,e)},k=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:i()("tabs",{"tabs--block":t})},l.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":j===t,className:i()("tabs__item",u.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return k.push(e)},onKeyDown:function(e){return function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(k,e.target,e)},onFocus:function(){return v(t)},onClick:function(){return v(t)}},n)}))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(n).filter((function(e){return e.props.value===j}))[0]))}}}]);